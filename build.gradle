buildscript {
    ext.kotlin_version = '1.1.51'

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-beta7'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id 'com.gradle.build-scan' version '1.8'
}
apply plugin: "com.android.application"
apply plugin: 'kotlin-android'


def versions = [
        "magellan": "1.0.0",
        "support": "26.1.0",
        "kotlintest" : "2.0.3",
        "junit": "4.12",
        "KotlinAndroidViewBindings": "0.08",
        "timber": "4.5.1",
        "constraint": "1.0.2"
]

repositories {
    google()
    jcenter()
    maven { url 'https://jitpack.io' }

}




android {

    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
        applicationId "com.wealthfront.magellan.kotlinsample"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    packagingOptions {
        exclude "LICENSE.txt"
    }
}

dependencies {

    // Magellan, the Simplest Navigation for Android
    // https://github.com/wealthfront/magellan
    compile "com.wealthfront:magellan:${versions.magellan}"
    compile "com.wealthfront:magellan-support:${versions.magellan}"

    // http://marcinmoskala.com/android/kotlin/2017/05/05/still-mvp-or-already-mvvm.html
    compile "com.github.MarcinMoskala:KotlinAndroidViewBindings:${versions.KotlinAndroidViewBindings}"


    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

    // Google Libs
    compile "com.android.support:support-v4:${versions.support}"
    compile "com.android.support:appcompat-v7:${versions.support}"
    compile "com.android.support:preference-v7:${versions.support}"
    compile "com.android.support:design:${versions.support}"
    compile "com.android.support:percent:${versions.support}"
    compile "com.android.support:cardview-v7:${versions.support}"
    compile "com.android.support.constraint:constraint-layout:${versions.constraint}"
    compile "com.android.support:multidex:1.0.2"


    // https://github.com/JakeWharton/timber
    compile "com.jakewharton.timber:timber:${versions.timber}"

    // https://github.com/MEiDIK/SlimAdapter
    // A slim & clean & typeable Adapter without# VIEWHOLDER
    compile "net.idik:slimadapter:1.3.0"



    /* Testing

      KotlinTest DSL https://github.com/kotlintest/kotlintest/blob/master/doc/reference.md
      KotlinTest Matchers: https://github.com/kotlintest/kotlintest/blob/master/doc/matchers.md
      Mockito-Kotlin https://github.com/nhaarman/mockito-kotlin/wiki/Mocking-and-verifying
      */
    testCompile "io.kotlintest:kotlintest:${versions.kotlintest}", {
        exclude group: "com.google.code.findbugs", module: "annotations"
    }
    androidTestCompile "io.kotlintest:kotlintest:${versions.kotlintest}", {
        exclude group: "com.google.code.findbugs", module: "annotations"
    }
    testCompile "com.nhaarman:mockito-kotlin:1.5.0"
    testCompile "junit:junit:${versions.junit}"



    androidTestCompile "com.android.support.test.espresso:espresso-core:2.2.2"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:2.2.2"
}


configurations.all {
    resolutionStrategy {
        force "com.android.support:appcompat-v7:${versions.support}"
        force "com.android.support:preference-v7:${versions.support}"
        force "com.android.support.constraint:constraint-layout:${versions.constraint}"
        force "com.android.support:design:${versions.support}"
        force "com.android.support:percent:${versions.support}"
        force "com.android.support:support-v13:${versions.support}"
    }
}


buildScan {
// Uncomment the lines below to agree to the Terms of Service.
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = "yes"
    tag "SAMPLE"
    link "GitHub", 'https://github.com/gradle/gradle-build-scan-quickstart'
}
