buildscript {
    ext.kotlin_version = "1.2.71"

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.2.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id("com.gradle.build-scan") version "1.10.2"
    id("jmfayard.github.io.gradle-kotlin-dsl-libs") version "0.2.6"  // $ ./gradlew syncLibs
}
apply plugin: "com.android.application"
apply plugin: "kotlin-android"



repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }

}


android {

    compileSdkVersion Config.compileSdkVersion

    defaultConfig {
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        applicationId Config.applicationId
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    packagingOptions {
        exclude "LICENSE.txt"
    }
}

dependencies {

    // Magellan, the Simplest Navigation for Android https://github.com/wealthfront/magellan
    implementation(Libs.magellan)
    implementation(Libs.magellan_support)

    implementation(Libs.kotlinandroidviewbindings)
    implementation(Libs.kotlin_stdlib)
    implementation(Libs.support_v4)
    implementation(Libs.appcompat_v7)
    implementation(Libs.preference_v7)
    implementation(Libs.design)
    implementation(Libs.percent)
    implementation(Libs.cardview_v7)
    implementation(Libs.constraint_layout)
    implementation(Libs.multidex)
    implementation(Libs.timber)
    implementation(Libs.slimadapter)
    compileOnly(Libs.jsr305)
    testCompileOnly(Libs.jsr305)
    testImplementation(Libs.kotlintest)
    testImplementation(Libs.kotlin_reflect)
    testImplementation(Libs.kotlin_test)
    testImplementation(Libs.mockito_kotlin)
    testImplementation(Libs.junit)
    androidTestImplementation(Libs.kotlintest)
    androidTestImplementation(Libs.espresso_core)
    androidTestImplementation(Libs.espresso_contrib)

}


configurations.all {
    resolutionStrategy {
        for (version in Config.forceDependencyVersions) {
            force(version)
        }
    }
}


buildScan {
// Uncomment the lines below to agree to the Terms of Service.
    licenseAgreementUrl = "https://gradle.com/terms-of-service"
    licenseAgree = "yes"
    tag "SAMPLE"
    link "GitHub", "https://github.com/gradle/gradle-build-scan-quickstart"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
    }
}
